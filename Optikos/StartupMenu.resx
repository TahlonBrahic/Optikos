<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AABbUkT/XVRF/11URf9cVEX/XVVG/15VSP9fVkn/X1ZJ/2BWSf9gV0r/YFdK/2BXSv9gV0v/YFdL/2BX
        Sv9gV0n/YFhJ/2FYSf9hWEn/YVlK/2JZS/9hWEr/YVhK/2FYS/9gV0r/YFdJ/2BYSf9gV0n/X1ZI/19W
        SP9gV0n/YFdJ/15VRv9fVkf/XlVH/15VSP9fVkj/YFdJ/2BXSv9hWEr/YVhL/2FYS/9hWEz/YllM/2JZ
        TP9iWUz/YllL/2FYSv9hWEn/YVhK/2FZSv9iWkv/Y1pN/2JaTf9iWk3/Y1pN/2JZTf9iWUz/YVlM/2FZ
        TP9gWEv/YFhL/2FYS/9hWEr/X1ZI/2BXSf9fVkr/YFdK/2BYS/9hWUz/YllM/2JZTP9iWU3/YllM/2Ja
        Tf9iWUz/YVlM/2FYSv9fV0j/XlVG/15VRv9eVkf/YFdI/2JZS/9kW03/ZFtO/2RcT/9kXE//ZFtP/2Rb
        Tv9jWk7/Y1pO/2JZTf9iWUz/YllM/2JZTP9hV0r/YVhL/2FYS/9hWEv/YVlM/2JaTv9jW0//ZFtO/2Nb
        Tv9kW07/Y1pM/2BXSf9dVUb/WlFD/1dOP/9UTDz/VEs8/1VNPf9YUED/XVRF/2FZSv9lXE3/Zl1Q/2Ze
        Uf9mXVH/Zl1Q/2ZdUP9lW0//ZFtP/2RaTv9kW07/ZFpO/2JZTP9jWkz/Y1pN/2JaTv9iW07/Y1tP/2Rc
        UP9lXVD/Zl1Q/2RbTf9fV0j/WVFC/1NLO/9MQzX/Rz4v/0Q6K/9DOiv/Rjwt/0tBMv9SSTn/WlFC/2FY
        Sf9lXU7/aF9S/2hfUv9nX1L/Z15S/2VeUf9kXVD/ZVxQ/2VcUP9lXFD/ZFtO/2RcT/9kXE//ZFxQ/2Vd
        UP9lXVH/Zl5R/2deUv9mXU//YFdI/1dPP/9MQzX/Qjgq/zgvIv8xJxv/LiQY/y4kF/8xJxr/OC0g/0A3
        Kf9MQzT/WE9A/2JZSv9oX1L/aWFV/2lhVf9oYFT/Z19T/2ZfUv9lXlH/ZV1R/2VeUf9lXU//ZV1Q/2Vd
        Uf9mXlH/Z19S/2dfU/9nYFP/Z19S/2NbTP9YT0D/SUAy/zkwI/8sIxf/IhkP/xwTCv8ZEAf/GRAH/xsS
        CP8iGA7/LCIX/zowI/9KQTL/WlFB/2ZdTv9rYlb/a2NX/2piVv9oYVX/Z2BU/2dgU/9nX1P/Z19T/2Zf
        Uv9nX1P/Z2BT/2dgU/9oYVT/aWJV/2liVv9nX1L/XlVH/0xDNP84LiH/JRwS/xUOB/8PCQP/EgsF/xUO
        CP8VDgj/EgsF/xAJA/8VDgb/JRwR/zkvIv9NRDX/YFdI/2tiVf9tZVn/bGVY/2tjV/9qYlb/amJW/2pi
        Vf9qYlb/aGFU/2hhVf9pYlX/amJW/2pjVv9rZFf/a2RX/2VdUP9VTD7/PjQm/yMaEP8QCgX/GhMN/yoi
        Gf8vJhz/LCQa/ywkGv8uJRz/KyQa/xwVD/8QCgT/IxkQ/z81J/9XTkD/aWBS/29nWv9vZlr/bmVZ/21l
        WP9tZFj/bWRY/25kWP9qY1b/a2NX/2tkV/9sZFf/bGVY/21mWf9sZFj/YVlL/0pBMv8oHxX/EgsG/yki
        GP8vJx3/HBUP/xUPCf8XEQv/GBEL/xUOCf8aFA3/LiYd/ysjG/8TDAf/Jx4V/0xDNf9lXE7/cWhb/3Fp
        Xf9waFz/b2db/29mWv9vZ1r/b2da/21kV/9tZFj/bGVY/21mWf9uZ1r/b2hc/21lWP9cVEX/ODAk/xQN
        B/8sJBv/JyAX/xMNCP8wKSH/T0c8/1tTRv9cU0b/Ukk+/zQtJf8UDQn/JR4W/zApH/8UDgj/Ny8j/19W
        SP9xaFv/c2tf/3JqXv9xal3/cWlc/3FpXf9xaVz/b2Za/29nWv9uZ1r/bmdb/3BpXP9yal3/bmVY/1ZN
        P/8gGRH/Jh8W/ykhGf8RCwf/SUI4/3FpXf9eV03/SEA4/0dAN/9dVUr/cmpd/1FJQP8TDAj/JyAX/yki
        Gf8dFg//Vk0//3FoW/92bmH/dWxg/3RsX/90a1//dWtf/3RrX/9waFz/cWpd/3FpXf9yaV3/c2tf/3Rs
        X/9vZln/SUE0/xoTDf8uJh3/FhAL/z84Mf98dWr/RD42/xgSC/8NCAL/DQcC/xUPCf8+Ny7/e3Rp/0ZA
        OP8WEAr/LSUc/xkTDP9HPzP/cmlc/3hwZP92b2L/dW5i/3VuYf92bWH/dW1h/3NqXv90a1//dGtf/3Vs
        X/91bWD/dm5h/3FoW/87NCr/Ew4I/x8ZE/9HQTn/dW9m/19aUf8bFA3/EQsF/xsVDv8eFxD/EgwF/xoT
        C/9UTkT/eHNp/0lEPP8gGxT/FA4I/zkyKP90a1//enNm/3lyZf94cWT/d3Bj/3dwY/94cGP/dWxg/3Zt
        Yf92bWH/dm5i/3dvY/94cWT/dGxf/zMtI/8LBgH/X1tS/3l1bf+AfXX/Qz01/yAZEf8XEQv/MSoi/yok
        G/8YEwz/HhgQ/z43Lv9/e3L/d3Rr/2djXP8NCAP/MSsi/3ZvYv98dWj/e3Ro/3t0Z/96c2b/enNm/3py
        Zv92bmH/d3Bj/3hwZP94cWX/enNm/3t0Z/95cmX/NS8m/woFAP80MCf/XVhP/398dP9MRTz/IhsU/0tJ
        Qf+prKb/PDo0/woFAP8jHBX/SUI4/397c/9fW1T/OTUv/wsGAP8yLCT/e3Rn/393a/9+d2r/fXZp/312
        af99dmn/fHVp/3dwY/95cmX/enNm/3t0Z/98dWn/fnZq/394a/9COzL/HxkT/xYQCv8cFQ3/T0lA/05H
        Pv85MSj/UUw//7W2rv89Ojf/CQMA/zozKv9NRj3/Uk1G/x0XEP8WEAn/HBgS/zw3Lv+BeW3/gXpt/4B5
        bP9/eGz/f3hr/393a/9/eGv/enJm/3t0aP98dWj/fXZp/353a/9/eGz/gnpu/1dQRf87NCv/PTct/1BJ
        Of9JQjb/IhoS/zsyKf8jHBT/GBMN/wwHAv8eGBL/PTUs/yMbE/9BPDX/TEhB/zkzK/88NzD/UkxC/4V9
        cf+De2//gntu/4F6bf+BeW3/gXpt/4F5bf98dWj/fXZq/353av9/eGv/gHls/4F6bf+DfG//c2tg/zUt
        I/9oY1j/Qzwu/5SQev+Ni3//UUxE/zQuJf8kHhX/JR8V/zUvJP9PS0L/hoaA/4qKhf88Ni7/a2Zc/zcx
        Kf9xal//hn5y/4R9cP+EfHD/g3tv/4J7bv+Ce2//gntu/394av+AeWz/gXpt/4J6bv+Ce2//g3xw/4R9
        cf+FfnH/T0c8/1NNQf94c2n/Qzst/4+Lev/GycD/wcW//7O2sf+0t7H/wcXA/8XJxf+LjIb/Pjgv/3hz
        av9cVk7/SkM6/4d/c/+HgHT/h39z/4Z/cv+FfnH/hH1x/4R9cf+EfXH/gXpt/4J7bv+DfG//hHxw/4R9
        cf+FfnL/hn9z/4iBdP9+d2r/QTgs/2xmW/+Lhnz/TEQ4/09IPf9+fHT/np+Z/5+hm/+DgXv/UUxD/0pD
        OP+LiH//dHBo/z83Lf99dWn/ioN3/4mCdv+Jgnb/iYJ1/4eAdP+HgHP/h39z/4Z/c/+De2//hHxw/4V9
        cf+Gf3L/hn9z/4eAdP+IgXX/iYJ1/4uEeP95cmX/Qzov/2FbT/+cmI3/i4d+/2hiWP9WUEb/Vk9F/2Vf
        Vf+Jhn3/oZ+Y/2plXf9DOi//eHBk/42Gef+LhHf/i4R4/4uEeP+LhHf/ioJ2/4mCdf+JgnX/iIF1/4R9
        cf+FfnL/hn9z/4eAdP+IgXX/iYJ1/4qDdv+LhHf/i4R4/42Gev+Cem7/VU1A/0c/M/9taF3/kY+G/5+f
        l/+fnpb/kpCI/3FsY/9MRDn/U0s+/4B5bP+PiHv/jYZ5/4yFef+MhXn/jIV4/4yEeP+LhHj/i4R4/4uE
        eP+LhHf/hn9y/4eAdP+IgXT/iIF1/4qCdv+Lg3f/i4R4/4yFeP+NhXn/jYZ6/4+He/+Nhnn/enJm/15V
        Sf9ORjr/S0M3/0tCNv9PRjr/XlZJ/3pyZP+Nhnn/kIl8/4+Ie/+Oh3v/jod6/42Gev+Nhnr/jYZ5/42G
        ef+Nhnn/jIV5/4yFef+HgHT/iYF1/4mCdf+Jgnb/i4R3/4yFeP+NhXn/jYZ5/42Hev+Oh3v/jod7/4+I
        e/+QiX3/kYp9/46Gev+Kg3b/ioJ2/42Gef+Rin3/kYp9/5CJfP+QiXz/kIl8/5CJfP+PiHz/j4h7/46H
        e/+Oh3v/joh7/46Hev+Nhnr/jYZ5/4iBdP+Jgnb/ioN2/4uEd/+MhXj/jYV5/42Gev+Oh3r/j4h7/4+J
        fP+PiXz/kIl9/5CKff+Qin7/kYt+/5KLf/+Si3//kYt+/5GKfv+Rin7/kYp+/5GKff+Rin7/kYp+/5GJ
        ff+QiX3/kIl8/4+JfP+PiHz/j4h7/4+He/+PiHv/iYJ1/4qDdv+LhHj/jIV5/42Gev+Oh3r/j4h7/4+I
        fP+QiXz/kYp9/5GKfv+Si37/kYt//5GMf/+TjH//lI2A/5OMgP+TjID/kox//5OMf/+TjID/k4yA/5OM
        f/+TjH//k4t//5KLf/+Si37/kYp+/5GKff+Rin3/kYp9/5GJff+LhHj/jIV5/42Gev+Oh3r/joh7/4+I
        e/+QiXz/kYp9/5GKfv+Si3//k4x//5OMgP+UjYD/lI6B/5WOgf+VjoL/lY6C/5WOgv+VjoH/lY6B/5WO
        gf+VjoH/lY6B/5WOgf+UjYH/lI2A/5OMf/+TjH//kot//5KLf/+Si3//kYp+/42Gev+Oh3v/j4h7/4+I
        fP+PiXz/kYl9/5KKfv+Si3//k4yA/5SNgP+VjoH/lY6C/5aPgv+Wj4P/lo+D/5aPg/+Xj4P/l5CD/5eQ
        g/+XkIP/l4+D/5eQg/+Wj4P/lo+C/5aPgv+WjoL/lY6B/5SNgf+UjYD/lI2A/5SMgP+TjID/j4h8/5CJ
        fP+Qin3/kYp+/5GKfv+Si37/k4yA/5SNgf+VjoL/lY6C/5aPg/+XkIP/l5CE/5iRhP+YkYT/mJGE/5iR
        hP+YkYX/mJGF/5iRhf+YkYX/mZGF/5iRhP+XkIT/mJCE/5eQhP+Xj4P/lo+D/5aPgv+Wj4L/lY6C/5WO
        gf+Rin3/kot+/5KLf/+TjH//lI2A/5SNgP+VjoH/lo+C/5aPgv+XkIP/mJGE/5iRhP+YkoX/mZKG/5mS
        hv+ak4b/mpOH/5qTh/+ak4f/mpOG/5qTh/+ak4f/mpOG/5mShf+ZkoX/mJGF/5iRhP+XkIT/l5CD/5eQ
        g/+XkIP/l4+D/5OMfv+UjYD/lI2A/5WOgf+VjoH/lo+C/5ePg/+XkIT/mJGE/5iRhf+Zkob/mpOG/5qT
        hv+bk4f/m5SI/5yUiP+clYj/nJWJ/5yViP+clYj/nJWI/5uUiP+blIf/m5SH/5uUh/+ak4b/mpOG/5mS
        hf+ZkoX/mZGF/5iRhf+ZkoX/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>